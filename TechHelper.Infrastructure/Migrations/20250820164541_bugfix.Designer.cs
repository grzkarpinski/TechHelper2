// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechHelper.Infrastructure.Persistence;

#nullable disable

namespace TechHelper.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820164541_bugfix")]
    partial class bugfix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CutterHeadMillingInsert", b =>
                {
                    b.Property<int>("CutterHeadsId")
                        .HasColumnType("int");

                    b.Property<int>("MillingInsertsId")
                        .HasColumnType("int");

                    b.HasKey("CutterHeadsId", "MillingInsertsId");

                    b.HasIndex("MillingInsertsId");

                    b.ToTable("CutterHeadMillingInsert");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.CutterHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatalogNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CutterHeadType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Diameter")
                        .HasColumnType("float");

                    b.Property<bool>("IsToolActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTeeth")
                        .HasColumnType("int");

                    b.Property<string>("Producer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CutterHeads");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.CuttingParametersFinal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CutterHeadId")
                        .HasColumnType("int");

                    b.Property<double?>("CuttingDepth")
                        .HasColumnType("float");

                    b.Property<int?>("DrillId")
                        .HasColumnType("int");

                    b.Property<double>("Feed")
                        .HasColumnType("float");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MillingToolId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RPM")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CutterHeadId");

                    b.HasIndex("DrillId");

                    b.HasIndex("MillingToolId");

                    b.ToTable("CuttingParametersFinals");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.CuttingParametersRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CuttingSpeedMax")
                        .HasColumnType("float");

                    b.Property<double>("CuttingSpeedMin")
                        .HasColumnType("float");

                    b.Property<int?>("DrillId")
                        .HasColumnType("int");

                    b.Property<double?>("FeedPerRevisionMax")
                        .HasColumnType("float");

                    b.Property<double?>("FeedPerRevisionMin")
                        .HasColumnType("float");

                    b.Property<double?>("FeedPerToothMax")
                        .HasColumnType("float");

                    b.Property<double?>("FeedPerToothMin")
                        .HasColumnType("float");

                    b.Property<int?>("MillingInsertId")
                        .HasColumnType("int");

                    b.Property<int?>("MillingToolId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrillId");

                    b.HasIndex("MillingInsertId");

                    b.HasIndex("MillingToolId");

                    b.ToTable("CuttingParametersRanges");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.Drill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatalogNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Diameter")
                        .HasColumnType("float");

                    b.Property<int>("DrillType")
                        .HasColumnType("int");

                    b.Property<bool>("IsToolActive")
                        .HasColumnType("bit");

                    b.Property<double>("LengthXD")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipAngle")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drills");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.MillingInsert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Radius")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MillingInserts");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.MillingTool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatalogNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Diameter")
                        .HasColumnType("float");

                    b.Property<int>("FluteLength")
                        .HasColumnType("int");

                    b.Property<bool>("IsToolActive")
                        .HasColumnType("bit");

                    b.Property<int>("MillingToolType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfFlutes")
                        .HasColumnType("int");

                    b.Property<string>("Producer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Radius")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MillingTools");
                });

            modelBuilder.Entity("CutterHeadMillingInsert", b =>
                {
                    b.HasOne("TechHelper.Infrastructure.Entities.CutterHead", null)
                        .WithMany()
                        .HasForeignKey("CutterHeadsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechHelper.Infrastructure.Entities.MillingInsert", null)
                        .WithMany()
                        .HasForeignKey("MillingInsertsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.CuttingParametersFinal", b =>
                {
                    b.HasOne("TechHelper.Infrastructure.Entities.CutterHead", "CutterHead")
                        .WithMany("CuttingParametersFinals")
                        .HasForeignKey("CutterHeadId");

                    b.HasOne("TechHelper.Infrastructure.Entities.Drill", "Drill")
                        .WithMany("CuttingParametersFinals")
                        .HasForeignKey("DrillId");

                    b.HasOne("TechHelper.Infrastructure.Entities.MillingTool", "MillingTool")
                        .WithMany("CuttingParametersFinals")
                        .HasForeignKey("MillingToolId");

                    b.Navigation("CutterHead");

                    b.Navigation("Drill");

                    b.Navigation("MillingTool");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.CuttingParametersRange", b =>
                {
                    b.HasOne("TechHelper.Infrastructure.Entities.Drill", "Drill")
                        .WithMany("CuttingParametersRanges")
                        .HasForeignKey("DrillId");

                    b.HasOne("TechHelper.Infrastructure.Entities.MillingInsert", "MillingInsert")
                        .WithMany("CuttingParametersRanges")
                        .HasForeignKey("MillingInsertId");

                    b.HasOne("TechHelper.Infrastructure.Entities.MillingTool", "MillingTool")
                        .WithMany("CuttingParametersRanges")
                        .HasForeignKey("MillingToolId");

                    b.Navigation("Drill");

                    b.Navigation("MillingInsert");

                    b.Navigation("MillingTool");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.CutterHead", b =>
                {
                    b.Navigation("CuttingParametersFinals");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.Drill", b =>
                {
                    b.Navigation("CuttingParametersFinals");

                    b.Navigation("CuttingParametersRanges");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.MillingInsert", b =>
                {
                    b.Navigation("CuttingParametersRanges");
                });

            modelBuilder.Entity("TechHelper.Infrastructure.Entities.MillingTool", b =>
                {
                    b.Navigation("CuttingParametersFinals");

                    b.Navigation("CuttingParametersRanges");
                });
#pragma warning restore 612, 618
        }
    }
}
